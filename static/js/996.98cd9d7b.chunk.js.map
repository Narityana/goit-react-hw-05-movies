{"version":3,"file":"static/js/996.98cd9d7b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.js","components/Service/Api.js","components/Button/Button.styled.js","components/Button/Button.js","components/CardMovie/CardMovie.styled.js","components/CardMovie/CardMovie.js","pages/MovieDetails.styled.js","pages/MovieDetails.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader__container\":\"Loader_loader__container__dne6P\"};","import { Blocks } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={css.loader__container}>\n      <Blocks\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n// const fetch = require('node-fetch');\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiZWFiZGVjMWQ5MzAyM2Q4MDVkZDE4ODM1NTZlM2Q5MCIsInN1YiI6IjY0YTNiY2M1ZDQwMGYzMDBhZDg2NzcxMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.pfqugKy3R3POYfRm41TUve8rMoXoCAWEzEXVYQ8yPQM',\n  },\n};\n\nexport async function fetchTrandingMovie() {\n  const response = await axios.get('/trending/all/day?language=en-US', options);\n  return response.data.results;\n}\n\nexport async function fetchSerchMovie(query) {\n  const response = await axios.get(\n    `/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  return response.data.results;\n}\n\nexport async function fetchDetailsMovie(movieId) {\n  const response = await axios.get(`/movie/${movieId}?language=en-US`, options);\n  return response.data;\n}\n\nexport async function fetchCreditsMovie(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?language=en-US`,\n    options\n  );\n  return response.data;\n}\n\nexport async function fetchRewiewsMovie(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?language=en-US&page=1`,\n    options\n  );\n  return response.data.results;\n}\n","import styled from 'styled-components';\n\nexport const ButtonStyle = styled.button`\n  padding: 7px 14px;\n  border-radius: 6px;\n  background-color: #008b8b;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 150px;\n  box-shadow: 0 2px 5px #000;\n\n  &:hover {\n    background-color: #084949;\n    color: rgb(245 244 154);\n  }\n`;\n\nexport const IconBox = styled.div`\n  width: 30px;\n  height: 30px;\n  margin-right: 10px;\n  display: flex;\n  align-items: center;\n`;\n","import PropTypes from 'prop-types';\n// import css from './Button.module.css';\nimport { ButtonStyle, IconBox } from './Button.styled';\n\nconst Button = ({ buttonName, icon }) => {\n  return (\n    <ButtonStyle type=\"button\">\n      <IconBox>{icon}</IconBox>\n      {buttonName}\n    </ButtonStyle>\n  );\n};\n\nButton.propTypes = {\n  buttonName: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  background-color: rgb(0, 139, 139, 0.3);\n  padding: 30px;\n  margin: 20px 0 3px 150px;\n  display: flex;\n  border-radius: 10px;\n  box-shadow: 0 2px 5px black;\n`;\nexport const Poster = styled.img`\n  width: 300px;\n  height: 100%;\n  box-shadow: 0 2px 5px black;\n`;\nexport const Information = styled.div`\n  margin-left: 30px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 30px;\n`;\nexport const Score = styled.h3`\n  margin-bottom: 15px;\n  width: 150px;\n  padding: 10px 30px;\n  color: rgb(245 244 154);\n  border: 2px solid;\n  border-color: #008b8b;\n  border-radius: 5px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\n\nexport const Subtitle = styled.h2`\n  margin-bottom: 15px;\n`;\n","import PropTypes from 'prop-types';\nimport defaultPoster from 'components/images/defaultPoster.jpg';\nimport {\n  Container,\n  Poster,\n  Information,\n  Title,\n  Score,\n  List,\n  Subtitle,\n} from './CardMovie.styled';\n\nconst CardMovie = ({ details }) => {\n  const {\n    id,\n    title,\n    release_date,\n    poster_path,\n    vote_average,\n    overview,\n    genres,\n  } = details;\n\n  const poster = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : `${defaultPoster}`;\n  const year = release_date && `(${release_date.slice(0, 4)})`;\n  const score = Math.round(vote_average * 10);\n  const genresList = genres\n    ? genres.map(genre => genre.name).join(' ')\n    : 'No information';\n\n  return (\n    <Container key={id}>\n      <Poster src={poster} alt={title} />\n      <Information>\n        <Title>\n          {title} {year}\n        </Title>\n        <Score>User score: {score}%</Score>\n        <List>\n          <li>\n            <Subtitle>Overview</Subtitle>\n            <p>{overview}</p>\n          </li>\n          <li>\n            <Subtitle>Genres</Subtitle>\n            <p>{genresList}</p>\n          </li>\n        </List>\n      </Information>\n    </Container>\n  );\n};\n\nCardMovie.propTypes = {\n  details: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      })\n    ),\n  }).isRequired,\n};\n\nexport default CardMovie;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { MdOutlineRememberMe } from 'react-icons/md';\nimport { BiLeftArrowCircle } from 'react-icons/bi';\nimport { MdOutlineReviews } from 'react-icons/md';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n`;\n\nexport const Subtitle = styled.h2`\n  color: rgb(245 244 154);\n  margin: 0 30px 0 350px;\n`;\nexport const BtnContainer = styled.div`\n  background-color: rgb(0, 139, 139, 0.3);\n  padding: 20px;\n  margin-left: 150px;\n  display: flex;\n  align-items: center;\n  border-radius: 10px 10px 0 0;\n  box-shadow: 0 2px 5px black;\n`;\nexport const LinkButton = styled(NavLink)`\n  margin-right: 30px;\n`;\n\nexport const IconReview = styled(MdOutlineReviews)`\n  width: 25px;\n  height: 25px;\n`;\nexport const IconBack = styled(BiLeftArrowCircle)`\n  width: 25px;\n  height: 25px;\n`;\nexport const IconCast = styled(MdOutlineRememberMe)`\n  width: 25px;\n  height: 25px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState, useRef } from 'react';\nimport { NavLink, Outlet, useLocation } from 'react-router-dom';\nimport { fetchDetailsMovie } from 'components/Service/Api';\nimport Button from 'components/Button/Button';\nimport CardMovie from 'components/CardMovie/CardMovie';\nimport Loader from 'components/Loader/Loader';\n\nimport {\n  IconBack,\n  IconReview,\n  IconCast,\n  Container,\n  Subtitle,\n  BtnContainer,\n  LinkButton,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n  const [details, setDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const addDetails = async () => {\n      try {\n        setIsLoading(true);\n        const movie = await fetchDetailsMovie(movieId);\n        setDetails(movie);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    addDetails();\n  }, [movieId]);\n\n  return (\n    <Container>\n      <NavLink to={backLinkLocationRef.current}>\n        <Button icon={<IconBack />} buttonName=\"Go back!\" />\n      </NavLink>\n      <CardMovie details={details} />\n      <BtnContainer>\n        <Subtitle>Additional information:</Subtitle>\n\n        <LinkButton to=\"cast\">\n          <Button icon={<IconCast />} buttonName=\"Cast\" />\n        </LinkButton>\n        <NavLink to=\"reviews\">\n          <Button icon={<IconReview />} buttonName=\"Reviews\" />\n        </NavLink>\n      </BtnContainer>\n      {isLoading && <Loader />}\n      <Outlet />\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["_jsx","className","css","children","Blocks","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","axios","options","method","headers","accept","Authorization","fetchTrandingMovie","_fetchTrandingMovie","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","fetchSerchMovie","_x","_fetchSerchMovie","_callee2","query","_context2","concat","fetchDetailsMovie","_x2","_fetchDetailsMovie","_callee3","movieId","_context3","fetchCreditsMovie","_x3","_fetchCreditsMovie","_callee4","_context4","fetchRewiewsMovie","_x4","_fetchRewiewsMovie","_callee5","_context5","ButtonStyle","styled","_templateObject","_taggedTemplateLiteral","IconBox","_templateObject2","_ref","buttonName","icon","_jsxs","type","Container","Poster","Information","_templateObject3","Title","_templateObject4","Score","_templateObject5","List","_templateObject6","Subtitle","_templateObject7","details","id","title","release_date","poster_path","vote_average","overview","genres","poster","year","slice","score","Math","round","genresList","map","genre","name","join","src","alt","BtnContainer","LinkButton","NavLink","IconReview","MdOutlineReviews","IconBack","BiLeftArrowCircle","IconCast","MdOutlineRememberMe","_location$state$from","_location$state","location","useLocation","backLinkLocationRef","useRef","state","from","useParams","_useState","useState","_useState2","_slicedToArray","setDetails","_useState3","_useState4","isLoading","setIsLoading","useEffect","addDetails","movie","t0","console","log","finish","to","current","Button","CardMovie","Loader","Outlet"],"sourceRoot":""}